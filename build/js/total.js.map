{"version":3,"file":"total.js","sources":["js/lib/numberWithSpaces.js","js/total.js"],"sourcesContent":["/**\n * makes space-divided number\n * @param {number} x\n * @return {string}\n */\nfunction numberWithSpaces(x) {\n  if (x !== null && typeof x !== `undefined` && x !== ``) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, `&thinsp;`);\n  }\n  return x;\n}\n\nexport default numberWithSpaces;\n","import numberWithSpaces from \"./lib/numberWithSpaces\";\n\nconst totalNumber = document.getElementById(`total-number`);\n\nlet interval;\nconst dataV = {\n  isActive: true,\n  _numberArr: [],\n  numbers: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n  get numberArr() {\n    return this._numberArr;\n  },\n  setPosition: (num) => {\n    return `transform: translateY(-${num * 100}%); transition-duration: .3s;`;\n  }\n};\nconst counter = new Vue({\n  el: `#total-number`,\n  data: dataV\n});\nconst reCountTotal = (periods) => {\n  const prev = [...periods].reverse().find(period => (new Date() >= period.timeStamp));\n  const to = periods.find(period => (new Date() < period.timeStamp)) || prev;\n  const current = {\n    prev: prev,\n    to: to,\n    get time() {\n      return new Date()\n    },\n    get length() {\n      return this.to.timeStamp - this.prev.timeStamp\n    },\n    get diff() {\n      return this.to.total() - this.prev.total()\n    },\n    get percent() {\n      return (this.time - this.prev.timeStamp) / this.length\n    },\n    get total() {\n      return this.prev.total() + this.diff * this.percent;\n    },\n  };\n  clearInterval(interval);\n  interval = setInterval(() => {\n    if (dataV.isActive) {\n      dataV._numberArr = (Math.round(current.total).toString().split(``)).map(num => parseInt(num));\n    }\n  }, 1000)\n}\n// reCountTotal();\n// setInterval(reCountTotal, 60000);\n\nexport default {reCountTotal: reCountTotal, dataV: dataV};\n"],"names":[],"mappings":";;;AAAA;;;;GAIG,AACH,AAOA,AAAgC;;ACVhC,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;;AAE5D,IAAI,QAAQ,CAAC;AACb,MAAM,KAAK,GAAG;EACZ,QAAQ,EAAE,IAAI;EACd,UAAU,EAAE,EAAE;EACd,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvC,IAAI,SAAS,GAAG;IACd,OAAO,IAAI,CAAC,UAAU,CAAC;GACxB;EACD,WAAW,EAAE,CAAC,GAAG,KAAK;IACpB,OAAO,CAAC,uBAAuB,EAAE,GAAG,GAAG,GAAG,CAAC,6BAA6B,CAAC,CAAC;GAC3E;CACF,CAAC;AACF,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC;EACtB,EAAE,EAAE,CAAC,aAAa,CAAC;EACnB,IAAI,EAAE,KAAK;CACZ,CAAC,CAAC;AACH,MAAM,YAAY,GAAG,CAAC,OAAO,KAAK;EAChC,MAAM,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;EACrF,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC;EAC3E,MAAM,OAAO,GAAG;IACd,IAAI,EAAE,IAAI;IACV,EAAE,EAAE,EAAE;IACN,IAAI,IAAI,GAAG;MACT,OAAO,IAAI,IAAI,EAAE;KAClB;IACD,IAAI,MAAM,GAAG;MACX,OAAO,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS;KAC/C;IACD,IAAI,IAAI,GAAG;MACT,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;KAC3C;IACD,IAAI,OAAO,GAAG;MACZ,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM;KACvD;IACD,IAAI,KAAK,GAAG;MACV,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;KACrD;GACF,CAAC;EACF,aAAa,CAAC,QAAQ,CAAC,CAAC;EACxB,QAAQ,GAAG,WAAW,CAAC,MAAM;IAC3B,IAAI,KAAK,CAAC,QAAQ,EAAE;MAClB,KAAK,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;KAC/F;GACF,EAAE,IAAI,CAAC,CAAA;CACT,CAAA;;;;AAID,YAAe,CAAC,YAAY,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,;;,;;"}
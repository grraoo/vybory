{"version":3,"file":"socnet.js","sources":["js/lib/numberWithSpaces.js","js/socnet.js"],"sourcesContent":["/**\n * makes space-divided number\n * @param {number} x\n * @return {string}\n */\nfunction numberWithSpaces(x) {\n  if (x !== null && typeof x !== `undefined` && x !== ``) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, `&thinsp;`);\n  }\n  return x;\n}\n\nexport default numberWithSpaces;\n","import numberWithSpaces from \"./lib/numberWithSpaces\";\n\nconst socnets = document.querySelector(`.socnets`);\n\nconst buildStatsSn = (periods) => {\n  const prev = [...periods].reverse().find(period => (new Date() >= period.timeStamp));\n  const to = periods.find(period => (new Date() < period.timeStamp)) || prev;\n  const current = {\n    from: prev,\n    to: to,\n    get diff() {\n      return this.to.total() - this.from.total();\n    },\n    get total() {\n      const total = {\n        sum: 0,\n        snets: {}\n      };\n      let max = 0;\n      for (const sn in this.to.snets) {\n        if (this.to.snets.hasOwnProperty(sn)) {\n          const percent = Math.round(100 * (this.to.snets[sn] - this.from.snets[sn]) / this.diff)\n          if (percent > max) {\n            total.max = sn;\n            max = percent;\n          }\n          total.snets[sn] = `${percent}%`;\n          total.sum += percent;\n        }\n      }\n      const percentSum = 0;\n      const percentArr = [];\n      if (total.sum !== 100) {\n        total.snets[total.max] = `${parseInt(total.snets[total.max], 10) - (total.sum - 100)}%`;\n      }\n      return total;\n    }\n  };\n  return current.total.snets;\n};\n\nconst printStatsSn = (total) => {\n  for (const sn in total) {\n    if (total.hasOwnProperty(sn)) {\n      socnets.querySelector(`#${sn}`).innerText = total[sn];\n    }\n  }\n  socnets.classList.add(`animated`);\n}\n\n\nexport default {\n  build: buildStatsSn,\n  print: printStatsSn\n}"],"names":[],"mappings":";;;AAAA;;;;GAIG,AACH,AAOA,AAAgC;;ACVhC,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEnD,MAAM,YAAY,GAAG,CAAC,OAAO,KAAK;EAChC,MAAM,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;EACrF,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC;EAC3E,MAAM,OAAO,GAAG;IACd,IAAI,EAAE,IAAI;IACV,EAAE,EAAE,EAAE;IACN,IAAI,IAAI,GAAG;MACT,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;KAC5C;IACD,IAAI,KAAK,GAAG;MACV,MAAM,KAAK,GAAG;QACZ,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,EAAE;OACV,CAAC;MACF,IAAI,GAAG,GAAG,CAAC,CAAC;MACZ,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE;QAC9B,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;UACpC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;UACvF,IAAI,OAAO,GAAG,GAAG,EAAE;YACjB,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;YACf,GAAG,GAAG,OAAO,CAAC;WACf;UACD,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;UAChC,KAAK,CAAC,GAAG,IAAI,OAAO,CAAC;SACtB;OACF;MACD,MAAM,UAAU,GAAG,CAAC,CAAC;MACrB,MAAM,UAAU,GAAG,EAAE,CAAC;MACtB,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE;QACrB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;OACzF;MACD,OAAO,KAAK,CAAC;KACd;GACF,CAAC;EACF,OAAO,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;CAC5B,CAAC;;AAEF,MAAM,YAAY,GAAG,CAAC,KAAK,KAAK;EAC9B,KAAK,MAAM,EAAE,IAAI,KAAK,EAAE;IACtB,IAAI,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;MAC5B,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;KACvD;GACF;EACD,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;CACnC,CAAA;;;AAGD,aAAe;EACb,KAAK,EAAE,YAAY;EACnB,KAAK,EAAE,YAAY;CACpB,;;,;;"}
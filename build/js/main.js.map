{"version":3,"file":"main.js","sources":["js/lib/numberWithSpaces.js","js/lib/fetch.js","js/total.js","js/last.js","js/map.js","js/lib/load.js","sass/lib/_hashchange.js","js/main.js"],"sourcesContent":["/**\n * makes space-divided number\n * @param {number} x\n * @return {string}\n */\nfunction numberWithSpaces(x) {\n  if (x !== null && typeof x !== `undefined` && x !== `` && x.toString().length > 4) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, `&thinsp;`);\n  }\n  return x;\n}\n\nexport default numberWithSpaces;\n","export default fetch(`https://dashboard.sn-mg.ru/service/monitoring/dashboards?reportId=12253`).then(response => response.json());\n","import numberWithSpaces from \"./lib/numberWithSpaces\";\n\nconst totalNumber = document.getElementById(`total-number`);\n\nlet interval;\nconst dataV = {\n  isActive: true,\n  _numberArr: [],\n  numbers: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n  get numberArr() {\n    return this._numberArr;\n  },\n  setPosition: (num) => {\n    return `transform: translateY(-${num * 100}%); transition-duration: .3s;`;\n  }\n};\nconst counter = new Vue({\n  el: `#total-number`,\n  data: dataV\n});\nconst reCountTotal = (periods) => {\n  const prev = [...periods].reverse().find(period => (new Date() >= period.timeStamp));\n  const to = periods.find(period => (new Date() < period.timeStamp)) || prev;\n  const current = {\n    prev: prev,\n    to: to,\n    get time() {\n      return new Date()\n    },\n    get length() {\n      return this.to.timeStamp - this.prev.timeStamp\n    },\n    get diff() {\n      return this.to.total() - this.prev.total()\n    },\n    get percent() {\n      return (this.time - this.prev.timeStamp) / this.length\n    },\n    get total() {\n      return this.prev.total() + this.diff * this.percent;\n    },\n  };\n  clearInterval(interval);\n  interval = setInterval(() => {\n    if (dataV.isActive) {\n      dataV._numberArr = (Math.round(current.total).toString().split(``)).map(num => parseInt(num));\n    }\n  }, 1000)\n}\n// reCountTotal();\n// setInterval(reCountTotal, 60000);\n\nexport default {reCountTotal: reCountTotal, dataV: dataV};\n","import load from \"./lib/load\"\nimport numberWithSpaces from \"./lib/numberWithSpaces\";\n\nconst columns = document.querySelector(`.columns`);\nconst bigNum = document.querySelector(`#last .big-num`);\n\nconst buildLast = (periods) => {\n  const to = periods.find(period => (new Date() < period.timeStamp)) || periods[periods.length - 1];\n  const index = periods.indexOf(to);\n  const periods8 = [];\n  for (let i = index - 8; i < index; i++) {\n    if (periods[i]) {\n      periods8.push(periods[i].number);\n    }\n  }\n  return periods8;\n\n}\n\nconst showLast = (current) => {\n  const max = Math.max(...current) * 5;\n  const average = current[current.length - 1];\n  const diff = current[current.length - 1] - current[current.length - 2];\n  columns.innerHTML = ``;\n  current.forEach(number => {\n    const column = document.createElement(`div`);\n    const innerColumn = document.createElement(`div`);\n    column.classList.add(`column`);\n    innerColumn.style = `height: calc(5 * ${(number) * 23 / max}vh)`;\n    column.appendChild(innerColumn);\n    columns.appendChild(column);\n  });\n  if (diff >= 0) {\n    bigNum.classList.remove(`big-num--down`);\n    bigNum.classList.add(`big-num--up`);\n  } else {\n    bigNum.classList.remove(`big-num--up`);\n    bigNum.classList.add(`big-num--down`);\n  }\n  bigNum.dataset.average = average;\n};\n\nexport default {\n  build: buildLast,\n  show: showLast\n}\n","import numberWithSpaces from \"./lib/numberWithSpaces\";\nimport load from \"./lib/load\";\nconst TIMEOUT = 5000;\nconst bigNum = document.querySelector(`#map .slider`);\nconst mapSvg = document.querySelector(`.main-map`);\nlet interval = 0;\n\nconst adoptMapData = (periods) => {\n  const to = periods.find(period => (new Date() < period.timeStamp)) || periods[periods.length - 1];\n  const current = {\n    to: to,\n    get total() {\n      const total = {\n        sum: 0,\n        regs: {}\n      };\n      let max = 0;\n      for (const reg in this.to.regions) {\n        if (this.to.regions.hasOwnProperty(reg)) {\n\n          const regValue = parseInt(this.to.regions[reg], 10) || 0;\n          if (regValue > max) {\n            total.max = reg;\n            max = regValue;\n          }\n          total.regs[reg] = regValue;\n          total.sum += regValue;\n        }\n      }\n      return total;\n    }\n  };\n  return {\n    max: current.total.regs[current.total.max],\n    regs: current.total.regs\n  };\n};\n// .then(adoptMapData).then(paintMap).then(startMapSlide)\n\nconst paintMap = (total) => {\n  const currentRegs = [];\n  for (const reg in total.regs) {\n    if (total.regs.hasOwnProperty(reg)) {\n      const value = (1 - 3 * (total.regs[reg] / total.max)).toFixed(2);\n      const region = document.getElementById(reg);\n      if (region && parseInt(value) < 1) {\n        currentRegs.push(reg);\n        region.style.fill = `rgba(0, 109, 196, ${1 - value})`;\n        bigNum.querySelector(`.slide--${reg} .big-num`).innerHTML = numberWithSpaces(total.regs[reg]);\n      }\n    }\n  }\n  return currentRegs;\n};\nconst state = {\n  isActive: true\n};\nconst startMapSlide = (regs) => {\n  const slides = regs.map(reg => bigNum.querySelector(`.slide--${reg}`));\n  if (interval) {\n    clearInterval(interval);\n  }\n\n  interval = setInterval(() => {\n    if (state.isActive) {\n      const active = slides.find(slide => slide.classList.contains(`slide--active`));\n      if (active) {\n        active.classList.remove(`slide--active`)\n      }\n      const index = (slides.indexOf(active) + 1) % slides.length;\n      slides[index].classList.add(`slide--active`);\n      if (regs[index] === `moscow`) {\n        mapSvg.style = `transform: translate(151%, 24%) scale(4.5);`\n      } else if (regs[index] === `spb`) {\n        mapSvg.style = `transform: translate(95%, 48%) scale(3);`\n      } else if (regs[index] === `krasnoyarsk`) {\n        mapSvg.style = `transform: translate(-7%, -18%) scale(1.3)`\n      } else if (regs[index] === `nnovgorod`) {\n        mapSvg.style = `transform: translate(96%, -8%) scale(3.2);`\n      } else {\n        mapSvg.style = ``\n      }\n    }\n  }, TIMEOUT);\n\n}\n\nexport default {\n  adopt: adoptMapData,\n  paint: paintMap,\n  startSlide: startMapSlide,\n  state: state\n}\n","import getData from \"./fetch\";\nimport totalScreen from \"../total\";\nimport last from \"../last\";\nimport map from \"../map\";\n\nconst adoptTotal = (json => {\n  console.log(`loaded`);\n  const periods = {total:[], last:[], map:[]};\n  const mapArr = [];\n  const total = json.datasheets.map(period => {\n    const timeStamp = new Date();\n    const time = period.title.split(`:`);\n    const [hours, minutes] = time;\n    timeStamp.setHours(hours);\n    timeStamp.setMinutes(minutes);\n    timeStamp.setSeconds(0);\n\n    const periodTotal = period.sheetData.snetwork.total;\n    let sum = 0;\n    for (const sn in periodTotal) {\n      if (periodTotal.hasOwnProperty(sn)) {\n        sum += parseInt(periodTotal[sn], 10);\n      }\n    }\n\n    const periodRegions = period.sheetData.regions.russia;\n    const regions = periodRegions;\n\n    mapArr.push({\n      timeStamp: timeStamp,\n      regions: regions\n    });\n\n    return {\n      timeStamp: timeStamp,\n      _sum: parseInt(sum, 10),\n      total() {\n        return this._sum;\n      }\n    };\n  });\n  periods.total = total;\n  periods.map = mapArr;\n\n  const periodsLast = json.properties[`10min_dynamics`];\n  const last = [];\n  for (const period in periodsLast) {\n    if (periodsLast.hasOwnProperty(period)) {\n      const timeStamp = new Date();\n      const time = period.split(`:`);\n      const [hours, minutes] = time;\n      timeStamp.setHours(hours);\n      timeStamp.setMinutes(minutes);\n      timeStamp.setSeconds(0);\n      const number = parseInt(periodsLast[period], 10);\n      last.push({\n        timeStamp: timeStamp,\n        number: number\n      })\n    }\n  }\n  periods.last = last;\n\n  return periods;\n\n});\n\nconst reNew = () => {\n  getData.then(adoptTotal).then(total => {\n    totalScreen.reCountTotal(total.total);\n    last.show(last.build(total.last));\n    return total.map\n  }).then(map.adopt).then(map.paint).then(map.startSlide)\n  .catch(error => {console.error(error)})\n  }\n\n\nconst dataStorage = {\n  reNew() {\n    reNew();\n    setInterval(reNew, 60000);\n  }\n}\n\nexport default dataStorage;\n","export default () => {\n  const hash = window.location.hash;\n  if(hash && hash.length > 1) {\n    console.log(hash);\n  }\n};\n","import numberWithSpaces from \"./lib/numberWithSpaces\";\nimport load from \"./lib/load\";\nimport totalScreen from \"./total\";\nimport hashCnangeHandler from \"../sass/lib/_hashchange\";\nimport mapScreen from \"./map\";\n\nload.reNew();\n\nconst Timeouts = {\n  map: 5000,\n  total: 3000,\n  last: 3000\n}\n\nconst sliderControl = document.querySelector(`.slider-controls`);\nconst sliderBtns = [...sliderControl.querySelectorAll(`.slider-control`)];\nconst slideIds = sliderBtns.map((btn) => btn.dataset.slide);\nconst bullit = document.querySelector(`.bullit`);\nconst growNum = (node, num) => {\n  let temp = 0;\n  let grow = setInterval(() => {\n    if (Math.floor(temp += num / 200) <= num) {\n      node.innerHTML = numberWithSpaces(Math.floor(temp));\n    } else {\n      clearInterval(grow);\n    }\n  }, 5);\n};\n\nconst fullscreen3 = (element) => {\n  if (element.requestFullScreen) {\n    element.requestFullScreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullScreen) {\n    element.webkitRequestFullScreen();\n  }\n};\n\nconst Slider = {\n  btns: sliderBtns,\n  slideIds: slideIds,\n  _timeout: Timeouts,\n  autoPlay: true,\n  interval: null,\n  get timeout() {\n    return this._timeout[this.slideIds[this.index]];\n  },\n  get index() {\n    const currentSlideId = sliderBtns.find((btn) => btn.classList.contains(`slider-control--active`)).dataset.slide;\n    return slideIds.indexOf(currentSlideId);\n  },\n  next() {\n    const index = this.index;\n\n    const slideId = this.slideIds[(index + 1) % this.slideIds.length];\n    const btn = this.btns.find((btn) => btn.dataset.slide === slideId);\n    this.slide(btn);\n  },\n  prev() {\n    const index = this.index;\n    const slideId = this.slideIds[(index - 1 + this.slideIds.length) % this.slideIds.length];\n    const btn = this.btns.find((btn) => btn.dataset.slide === slideId);\n    this.slide(btn);\n  },\n  slide(btn) {\n    const slideId = btn.dataset.slide;\n    if (slideId && slideId !== slideIds[this.index]) {\n      const currentControl = sliderControl.querySelector(`.slider-control--active`);\n      if (currentControl) {\n        currentControl.classList.remove(`slider-control--active`);\n      }\n      btn.classList.add(`slider-control--active`);\n      btn.appendChild(bullit);\n\n      const currentSlide = document.querySelector(`.iframe--active`);\n      if (currentSlide) {\n        currentSlide.classList.remove(`iframe--active`);\n      }\n      const newSlide = document.getElementById(slideId);\n      newSlide.classList.add(`iframe--active`);\n\n      if (slideId === `socnet`) {\n        // const sn = document.querySelector(`.socnets`); // sn.innerHTML = sn.innerHTML;\n      } else if (slideId === `last`) {\n        const boo = document.querySelector(`.columns`);\n        boo.innerHTML = boo.innerHTML;\n        const bigNum = document.querySelector(`#last .big-num`);\n        growNum(document.querySelector(`#last .big-num`), document.querySelector(`#last .big-num`).dataset.average);\n      }\n      totalScreen.dataV.isActive = (slideId === `total`);\n      mapScreen.state.isActive = (slideId === `map`);\n      if (this.autoPlay) {\n        this.interval = setTimeout(() => {\n          this.next();\n        }, this.timeout);\n      } else {\n        clearTimeout(this.interval);\n      }\n    }\n  }\n}\n\nlet autoPlay = setTimeout(() => {\n  Slider.next();\n}, Slider.timeout);\nconst stopAutoPlay = () => {\n  clearTimeout(Slider.interval);\n  clearTimeout(autoPlay);\n  sliderControl.classList.remove(`slider-controls--animated`);\n  Slider.autoPlay = false;\n  Slider.interval = null;\n}\n\nwindow.addEventListener(`keydown`, (e) => {\n  console.log(e.key);\n  switch (e.key) {\n    case `5`:\n      fullscreen3(document.documentElement);\n      break;\n    case ` `: //space\n      stopAutoPlay();\n      Slider.next();\n\n      break;\n    case `Backspace`: //backspace\n      stopAutoPlay();\n      Slider.prev();\n\n      break;\n    case `1`:\n    case `2`:\n    case `3`:\n    // case `4`: // numbers 1-4\n      stopAutoPlay();\n      const index = parseInt(e.key, 10) - 1;\n      Slider.slide(Slider.btns[index], stop);\n      break;\n    // case `!`:\n    // case `End`:\n    //   if (e.shiftKey) {\n    //     stopAutoPlay(Slider.timeout);\n    //     Slider.slide(Slider.btns[0]);\n    //     const frame = document.querySelector(`#${Slider.btns[0].dataset.slide}`);\n    //     console.log(frame);\n    //     fullscreen3(frame);\n    //   }\n    //   break;\n    // case `@`:\n    // case `ArrowDown`:\n    //   if (e.shiftKey) {\n    //     stopAutoPlay(Slider.timeout);\n    //     Slider.slide(Slider.btns[1]);\n    //     const frame = document.querySelector(`#${Slider.btns[1].dataset.slide}`);\n    //     console.log(frame);\n    //     fullscreen3(frame);\n    //   }\n    //   break;\n    // case `#`:\n    // case `PageDown`:\n    //   if (e.shiftKey) {\n    //     stopAutoPlay(Slider.timeout);\n    //     Slider.slide(Slider.btns[2]);\n    //     const frame = document.querySelector(`#${Slider.btns[2].dataset.slide}`);\n    //     console.log(frame);\n    //     fullscreen3(frame);\n    //   }\n    //   break;\n    case `Enter`: //enter\n      if (!Slider.autoPlay) {\n        Slider.autoPlay = true;\n        Slider.next();\n      }\n      sliderControl.classList.add(`slider-controls--animated`);\n  }\n\n\n})\n\n// Slider.slide(Slider.btns[2]);\n// stopAutoPlay();\n\nsliderBtns[1].focus();\n\nhashCnangeHandler();\nwindow.onhashchange = hashCnangeHandler;\n"],"names":["bigNum","interval","last","load","mapScreen"],"mappings":"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"}